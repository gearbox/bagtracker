"""init schema

Revision ID: 90c6fb778389
Revises: 
Create Date: 2025-09-08 00:16:23.166778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90c6fb778389'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chains',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('name_full', sa.Text(), nullable=True),
    sa.Column('chain_type', sa.String(length=50), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('native_symbol', sa.String(length=10), nullable=False),
    sa.Column('explorer_url', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('nickname', sa.String(length=50), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('wallets',
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_address'), 'wallets', ['address'], unique=True)
    op.create_index(op.f('ix_wallets_chain_id'), 'wallets', ['chain_id'], unique=False)
    op.create_table('balances',
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('contract_address', sa.String(length=200), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('usd_value', sa.Numeric(precision=20, scale=4), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('wallet_id', 'contract_address', 'chain_id', name='uq_wallet_token_chain')
    )
    op.create_index(op.f('ix_balances_chain_id'), 'balances', ['chain_id'], unique=False)
    op.create_table('balances_history',
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('contract_address', sa.String(length=200), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('usd_value', sa.Numeric(precision=20, scale=4), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('fetched_at', 'id')
    )
    op.create_index(op.f('ix_balances_history_chain_id'), 'balances_history', ['chain_id'], unique=False)
    op.create_index(op.f('ix_balances_history_fetched_at'), 'balances_history', ['fetched_at'], unique=False)
    op.create_table('nft_balances',
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('contract_address', sa.String(length=200), nullable=False),
    sa.Column('collection_name', sa.String(length=100), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('token_id', sa.String(length=100), nullable=False),
    sa.Column('token_url', sa.Text(), nullable=True),
    sa.Column('token_metadata', sa.JSON(), nullable=True),
    sa.Column('usd_value', sa.Numeric(precision=20, scale=4), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('wallet_id', 'contract_address', name='uq_nft_wallet_token')
    )
    op.create_table('nft_balances_history',
    sa.Column('fetched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('contract_address', sa.String(length=200), nullable=False),
    sa.Column('collection_name', sa.String(length=100), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('token_id', sa.String(length=100), nullable=False),
    sa.Column('token_url', sa.Text(), nullable=True),
    sa.Column('token_metadata', sa.JSON(), nullable=True),
    sa.Column('usd_value', sa.Numeric(precision=20, scale=4), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('fetched_at', 'id')
    )
    op.create_index(op.f('ix_nft_balances_history_fetched_at'), 'nft_balances_history', ['fetched_at'], unique=False)
    op.create_table('transactions',
    sa.Column('wallet_id', sa.UUID(), nullable=True),
    sa.Column('tx_hash', sa.String(length=100), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_tx_hash'), 'transactions', ['tx_hash'], unique=False)
    # ### end Alembic commands ###
    
    # Turn balances_history and nft_balances_history into hypertables
    op.execute("SELECT create_hypertable('balances_history', 'fetched_at', if_not_exists => TRUE)")
    op.execute("SELECT create_hypertable('nft_balances_history', 'fetched_at', if_not_exists => TRUE)")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_tx_hash'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_nft_balances_history_fetched_at'), table_name='nft_balances_history')
    op.drop_table('nft_balances_history')
    op.drop_table('nft_balances')
    op.drop_index(op.f('ix_balances_history_fetched_at'), table_name='balances_history')
    op.drop_index(op.f('ix_balances_history_chain_id'), table_name='balances_history')
    op.drop_table('balances_history')
    op.drop_index(op.f('ix_balances_chain_id'), table_name='balances')
    op.drop_table('balances')
    op.drop_index(op.f('ix_wallets_chain_id'), table_name='wallets')
    op.drop_index(op.f('ix_wallets_address'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('chains')
    # ### end Alembic commands ###
